//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsCEConsentForms.ConsentFormsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientDetail", Namespace="http://schemas.datacontract.org/2004/07/Consent.sp.wcf")]
    [System.SerializableAttribute()]
    public partial class PatientDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AdmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttnDrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MRHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AdmDate {
            get {
                return this.AdmDateField;
            }
            set {
                if ((this.AdmDateField.Equals(value) != true)) {
                    this.AdmDateField = value;
                    this.RaisePropertyChanged("AdmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttnDr {
            get {
                return this.AttnDrField;
            }
            set {
                if ((object.ReferenceEquals(this.AttnDrField, value) != true)) {
                    this.AttnDrField = value;
                    this.RaisePropertyChanged("AttnDr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MRHash {
            get {
                return this.MRHashField;
            }
            set {
                if ((object.ReferenceEquals(this.MRHashField, value) != true)) {
                    this.MRHashField = value;
                    this.RaisePropertyChanged("MRHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConsentFormsService.IFormHandlerService")]
    public interface IFormHandlerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormHandlerService/GetPatientDetails", ReplyAction="http://tempuri.org/IFormHandlerService/GetPatientDetailsResponse")]
        System.Xml.Linq.XElement GetPatientDetails(string patientNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormHandlerService/GetPatientNumbers", ReplyAction="http://tempuri.org/IFormHandlerService/GetPatientNumbersResponse")]
        System.Xml.Linq.XElement GetPatientNumbers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormHandlerService/GetPatientIds", ReplyAction="http://tempuri.org/IFormHandlerService/GetPatientIdsResponse")]
        string[] GetPatientIds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormHandlerService/GetPatientDetail", ReplyAction="http://tempuri.org/IFormHandlerService/GetPatientDetailResponse")]
        WindowsCEConsentForms.ConsentFormsService.PatientDetail GetPatientDetail(string patientNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormHandlerService/SavePatientSignature", ReplyAction="http://tempuri.org/IFormHandlerService/SavePatientSignatureResponse")]
        bool SavePatientSignature(string PatientNumber, string SignaturesContent, string FormType, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormHandlerService/GetPatientSignature", ReplyAction="http://tempuri.org/IFormHandlerService/GetPatientSignatureResponse")]
        string GetPatientSignature(string PatientNumber, string FormType, string type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFormHandlerServiceChannel : WindowsCEConsentForms.ConsentFormsService.IFormHandlerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormHandlerServiceClient : System.ServiceModel.ClientBase<WindowsCEConsentForms.ConsentFormsService.IFormHandlerService>, WindowsCEConsentForms.ConsentFormsService.IFormHandlerService {
        
        public FormHandlerServiceClient() {
        }
        
        public FormHandlerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FormHandlerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FormHandlerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FormHandlerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.Linq.XElement GetPatientDetails(string patientNumber) {
            return base.Channel.GetPatientDetails(patientNumber);
        }
        
        public System.Xml.Linq.XElement GetPatientNumbers() {
            return base.Channel.GetPatientNumbers();
        }
        
        public string[] GetPatientIds() {
            return base.Channel.GetPatientIds();
        }
        
        public WindowsCEConsentForms.ConsentFormsService.PatientDetail GetPatientDetail(string patientNumber) {
            return base.Channel.GetPatientDetail(patientNumber);
        }
        
        public bool SavePatientSignature(string PatientNumber, string SignaturesContent, string FormType, string type) {
            return base.Channel.SavePatientSignature(PatientNumber, SignaturesContent, FormType, type);
        }
        
        public string GetPatientSignature(string PatientNumber, string FormType, string type) {
            return base.Channel.GetPatientSignature(PatientNumber, FormType, type);
        }
    }
}
